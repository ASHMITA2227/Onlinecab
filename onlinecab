import java.util.Scanner;

class Cab {
    String type;
    double ratePerKm;

    Cab(String type, double ratePerKm) {
        this.type = type;
        this.ratePerKm = ratePerKm;
    }

    double calculateFare(double distance) {
        return distance * ratePerKm;
    }
}

public class CabBookingSystem {
    static Scanner sc = new Scanner(System.in);
    static Cab selectedCab = null;
    static double distance = 0.0;
    static boolean isBooked = false;

    public static void main(String[] args) {
        int choice;

        do {
            System.out.println("\n--- ONLINE CAB BOOKING SYSTEM ---");
            System.out.println("1. Book a Cab");
            System.out.println("2. Cancel Booking");
            System.out.println("3. Ride Summary");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    bookCab();
                    break;
                case 2:
                    cancelBooking();
                    break;
                case 3:
                    rideSummary();
                    break;
                case 4:
                    System.out.println("Thank you for using our Cab Booking System!");
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        } while (choice != 4);
    }

    static void bookCab() {
        if (isBooked) {
            System.out.println("A cab is already booked. Please cancel it first to book a new one.");
            return;
        }

        System.out.println("Available Cab Types:");
        System.out.println("1. Mini (₹10/km)");
        System.out.println("2. Sedan (₹15/km)");
        System.out.println("3. SUV (₹20/km)");
        System.out.print("Choose a cab (1-3): ");
        int cabChoice = sc.nextInt();

        switch (cabChoice) {
            case 1:
                selectedCab = new Cab("Mini", 10);
                break;
            case 2:
                selectedCab = new Cab("Sedan", 15);
                break;
            case 3:
                selectedCab = new Cab("SUV", 20);
                break;
            default:
                System.out.println("Invalid cab choice.");
                return;
        }

        System.out.print("Enter distance in kilometers: ");
        distance = sc.nextDouble();
        isBooked = true;

        System.out.println("Cab booked successfully!");
        System.out.println("Cab Type: " + selectedCab.type);
        System.out.println("Distance: " + distance + " km");
        System.out.println("Fare: ₹" + selectedCab.calculateFare(distance));
    }

    static void cancelBooking() {
        if (!isBooked) {
            System.out.println("No booking found to cancel.");
        } else {
            selectedCab = null;
            distance = 0.0;
            isBooked = false;
            System.out.println("Your booking has been cancelled.");
        }
    }

    static void rideSummary() {
        if (!isBooked) {
            System.out.println("No ride booked.");
        } else {
            System.out.println("--- Ride Summary ---");
            System.out.println("Cab Type: " + selectedCab.type);
            System.out.println("Distance: " + distance + " km");
            System.out.println("Fare: ₹" + selectedCab.calculateFare(distance));
        }
    }
}
